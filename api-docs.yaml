openapi: 3.0.0
info:
  version: 1.0.0
  title: Historical Stats
  description: API to provide historical stats after Hypixel's new TOS changes
paths:
  /players:
    get:
      summary: Stats of a player at specified times
      security:
        - UserApiKey: []
        - WriteApiKey: []
      description: |
        Provides player stats for the given times in an unsorted array
      parameters:
        - in: query
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - in: query
          name: date
          required: true
          description: |
            The (query) date of stats to fetch.
            Can also be provided multiple times to get multiple dates from
            one request.
          schema:
            type: array
            items:
              type: number
          example:
            - 1
            - 0
      responses:
        '200':
          description: player successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoredPlayer'
    post:
      summary: adds given stats to the database
      security:
        - UserApiKey: []
        - WriteApiKey: []
      operationId: updatePlayers
      description: |
        Adds the given stats to the database for each player provided
      requestBody:
        description: player stats to add
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  queriedAt:
                    description: |
                      Unix time stamp of when the player was requested from the Hypixel API.
                      Optional, but encouraged if you are waiting to send bulk data every hour for example.
                    type: number
                    nullable: true
                    example: 1691477188035
                  hypixelStats:
                    $ref: '#/components/schemas/HypixelData'
      responses:
        '201':
          description: players added
  /players/dates:
    get:
      summary: The dates which stats are available to query from a specific player. Dates are based off of `queriedAt` times
      security:
        - UserApiKey: []
        - WriteApiKey: []
      parameters:
        - in: query
          name: uuid
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        '200':
          description: dates successfully fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    $ref: '#/components/schemas/uuid'
                  dates:
                    type: array
                    items:
                      type: number
                      example: 1691477188035
components:
  securitySchemes:
    UserApiKey:
      type: apiKey
      in: header
      name: API-Key
      description: Obtained by joining the [Historical Stats Discord](https://discord.gg/wX8RJxZZZ8) and running the `/apikey` command
    WriteApiKey:
      type: apiKey
      in: header
      name: API-Key
      description: Obtained by joining the [Historical Stats Discord](https://discord.gg/wX8RJxZZZ8) and talking to `@barelyawake`
  schemas:
    Player:
      type: object
      properties:
        uuid:
          $ref: '#/components/schemas/uuid'
    StoredPlayer:
      allOf:
        - $ref: '#/components/schemas/Player'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/StoredData'
    StoredData:
      type: array
      description: |
        Array of stat snapshots with receivedAt and queriedAt times available
      items:
        type: object
        properties:
          rawStats:
            $ref: '#/components/schemas/HypixelData'
          receivedAt:
            type: number
            example: 1691477188035
          queriedAt:
            type: number
            example: 1691476066035
    HypixelData:
      description: Raw Hypixel player object
      type: object
      required:
        - uuid
      properties:
        uuid:
          $ref: '#/components/schemas/uuid'
        displayname:
          type: string
          nullable: true
        rank:
          type: string
          nullable: true
          enum:
            - ADMIN
            - MODERATOR
            - HELPER
            - NORMAL
        packageRank:
          type: string
          nullable: true
          enum:
            - MVP_PLUS
            - MVP
            - VIP_PLUS
            - VIP
            - NONE
        newPackageRank:
          type: string
          nullable: true
          enum:
            - MVP_PLUS
            - MVP
            - VIP_PLUS
            - VIP
            - NONE
        monthlyPackageRank:
          type: string
          nullable: true
          enum:
            - SUPERSTAR
            - NONE
        firstLogin:
          type: number
          nullable: true
        lastLogin:
          type: number
          nullable: true
        lastLogout:
          type: number
          nullable: true
        stats:
          type: object
          nullable: true
    uuid:
      type: string
      format: uuid
      example: 3fa85f6457174562b3fc2c963f66afa6
